https://leetcode.com/problems/movie-rating/

# Write your MySQL query statement below
/**
Three Tables: Movies/Users/MovieRating

movie_id is the primary key for Movies table.
title is the name of the movie.

user_id is the primary key for Users table.

(movie_id, user_id) is the primary key for MovieRating table.
MovieRating table contains the rating of a movie by a user in their review.
created_at is the user's review date. 

PROBLEM:

1. Find the name of the user who has rated the greatest number of movies. In case of a tie, return the lexicographically smaller user name.
2. Find the movie name with the highest average rating in February 2020. In case of a tie, return the lexicographically smaller movie name.

*/


WITH userName AS
(
SELECT
    name,
    DENSE_RANK() OVER(ORDER BY COUNT(MR.user_id) DESC,name ASC) AS rnk
FROM Users U
JOIN MovieRating MR
    ON U.user_id = MR.user_id
GROUP BY 1
),
movieHigestAvg AS
(
SELECT
    title,
    DENSE_RANK() OVER(ORDER BY AVG(MR.rating) DESC,title ASC) AS rnk
FROM Movies M
JOIN MovieRating MR
ON M.movie_id = MR.movie_id
WHERE date_format(created_at,'%Y-%m') = '2020-02'
GROUP BY M.movie_id
    
)
SELECT
    name AS results
FROM userName 
WHERE rnk = 1
UNION 
SELECT
    title AS results
FROM movieHigestAvg
WHERE rnk = 1





WITH UserMovieRatings AS (
    SELECT u.name, COUNT(mr.movie_id) as number_of_ratings
    FROM Users u
    JOIN MovieRating mr ON u.user_id = mr.user_id
    GROUP BY u.name
),
RankedUserMovieRatings AS (
    SELECT name, DENSE_RANK() OVER (ORDER BY number_of_ratings DESC, name) as ranking
    FROM UserMovieRatings
),
MovieAvgRatings AS (
    SELECT m.title, AVG(mr.rating) as avg_rating
    FROM Movies m
    JOIN MovieRating mr ON m.movie_id = mr.movie_id
    WHERE YEAR(mr.created_at) = 2020 AND MONTH(mr.created_at) = 2
    GROUP BY m.title
),
RankedMovieAvgRatings AS (
    SELECT title, DENSE_RANK() OVER (ORDER BY avg_rating DESC, title) as ranking
    FROM MovieAvgRatings
)
SELECT name AS results 
FROM RankedUserMovieRatings 
WHERE ranking = 1
UNION ALL
SELECT title AS results 
FROM RankedMovieAvgRatings 
WHERE ranking = 1;

    
